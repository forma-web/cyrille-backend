name: CI

on:
  push:
  pull_request:
    branches:
      - master

env:
  DOCKERFILE: ./build/api/Dockerfile
  IMAGE_NAME: ${{ secrets.REGISTRY_USERNAME }}/${{ github.event.repository.name }}
  STAGING_PREVIEW_URL: https://api.forma-web.ru

jobs:
  code-quality:
    name: Code quality checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        command:
          - vendor/bin/pint -v --test
          - vendor/bin/phpstan analyze
    steps:
      - uses: actions/checkout@v3
      - name: Validate composer.json and composer.lock
        run: composer validate --strict
      - uses: actions/cache@v3
        id: composer-cache
        with:
          path: '**/vendor'
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
      - name: Install npm
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress
      - name: Run style check
        run: ${{ matrix.command }}

  build-and-push:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    name: Build and push
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

#  deploy-to-staging:
#    name: Deploy to staging
#    runs-on: ubuntu-latest
#    needs: build-and-push
#    environment:
#      name: staging
#      url: ${{ env.STAGING_PREVIEW_URL }}
#    steps:
#      - name: Connect to server
#        uses: appleboy/ssh-action@v0.1.8
#        with:
#          host: ${{ secrets.STAGING_HOST }}
#          username: ${{ secrets.STAGING_USERNAME }}
#          key: ${{ secrets.STAGING_KEY }}
#          script: |
#            docker service update cyrille_frontend --image ${{ env.IMAGE_NAME }}
